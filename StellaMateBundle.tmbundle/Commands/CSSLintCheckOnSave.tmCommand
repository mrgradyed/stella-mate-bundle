<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>command</key>
	<string>#!/usr/bin/env python

# The MIT License (MIT)

# Copyright (c) 2014 Emiliano D'Alterio

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import os
import re
import commands

if commands.getstatusoutput('which csslint')[0] == 0:
    path_to_file = os.environ['TM_FILEPATH']
    result = commands.getoutput('csslint %s' % (path_to_file))

    messages = []
    line_numbers = []
    if result:
        file_name = os.environ['TM_FILENAME']
        messages = result.split(file_name)
        del messages[0:2]
        for msg in messages:
            line_number = re.search('\d+', msg.split(':')[1])
            if line_number:
                line_numbers.append(int(line_number.group()))

    style = 'a {color: blue; text-decoration: none; padding: 5px;}'
    print '''&lt;html&gt;&lt;head&gt;&lt;style&gt;%s&lt;/style&gt;&lt;/head&gt;
        &lt;body&gt;&lt;h3&gt;csslint: %s errors&lt;/h3&gt;&lt;div&gt;''' % (style, len(messages))

    link = '&lt;a href="txmt://open?url=file://%s&amp;line=%d"&gt;%s&lt;/a&gt;&lt;br/&gt;'
    for line_number, msg in zip(line_numbers, messages):
        print link % (path_to_file, line_number, msg)

    print '&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'

else:
    print 'CSSLint NOT found.'
</string>
	<key>input</key>
	<string>none</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>@s</string>
	<key>name</key>
	<string>CSSLintOnSave</string>
	<key>outputCaret</key>
	<string>interpolateByLine</string>
	<key>outputFormat</key>
	<string>html</string>
	<key>outputLocation</key>
	<string>newWindow</string>
	<key>scope</key>
	<string>source.css</string>
	<key>uuid</key>
	<string>56ACC2B1-66C3-4733-9F24-EA8DF5194224</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
